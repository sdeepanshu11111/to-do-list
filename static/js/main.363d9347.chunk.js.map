{"version":3,"sources":["components/FilterTask.js","components/Todo.js","Pages/AllTask.js","components/NewTask.js","Pages/Completed.js","Pages/Pending.js","App.js","reportWebVitals.js","index.js"],"names":["FilterTask","setStatus","status","statusHandler","e","target","innerText","console","log","className","onClick","to","color","icon","faCaretRight","size","value","Todo","time","text","setToDos","toDos","id","map","el","completed","faCheckCircle","faCircle","slice","filter","faTrashAlt","AllTask","filterTodos","NewTask","setTextInput","textInput","onChange","placeholder","type","d","Math","random","String","Date","alert","CompletedTask","PendingTask","App","useState","setFilterTodos","useEffect","getToLocal","filterHandler","saveToLocal","localStorage","setItem","JSON","stringify","getItem","localTodo","parse","path","exact","Completed","Pending","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.363d9347.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst FilterTask = ({ setStatus, status }) => {\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.innerText);\r\n  };\r\n\r\n  console.log(status);\r\n  return (\r\n    <div className=\"filterTask\">\r\n      <Link\r\n        onClick={statusHandler}\r\n        className={`filter ${status === \"All tasks\" ? \"filterActive\" : \"\"}`}\r\n        to=\"/to-do-list\"\r\n      >\r\n        <FontAwesomeIcon color=\"black\" icon={faCaretRight} size=\"xs\" />\r\n        <h2 value=\"all\">All tasks</h2>\r\n      </Link>\r\n\r\n      <Link\r\n        onClick={statusHandler}\r\n        className={`filter ${status === \"completed\" ? \"filterActive\" : \"\"}`}\r\n        to=\"/to-do-list/completed\"\r\n      >\r\n        <FontAwesomeIcon color=\"black\" icon={faCaretRight} size=\"xs\" />{\" \"}\r\n        <h2>completed</h2>\r\n      </Link>\r\n\r\n      <Link\r\n        onClick={statusHandler}\r\n        className={`filter ${status === \"pending\" ? \"filterActive\" : \"\"}`}\r\n        to=\"/to-do-list/pending\"\r\n      >\r\n        <FontAwesomeIcon color=\"black\" icon={faCaretRight} size=\"xs\" />\r\n        <h2>pending</h2>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterTask;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faCircle,\r\n  faTrashAlt,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Todo = ({ time, text, setToDos, toDos, id, e }) => {\r\n  const deleteHandler = () => {\r\n    console.log(id);\r\n    setToDos(toDos.filter((el) => el.id !== id));\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setToDos(\r\n      toDos.map((el) => {\r\n        if (el.id === id) {\r\n          return {\r\n            ...el,\r\n            completed: !el.completed,\r\n          };\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-item\">\r\n      <FontAwesomeIcon\r\n        onClick={completeHandler}\r\n        color=\"white\"\r\n        icon={e.completed ? faCheckCircle : faCircle}\r\n      />\r\n      <div className={`info ${e.completed ? \" completedClass\" : \"\"} `}>\r\n        <h3>{text}</h3>\r\n        <p>{time.slice(0, 15)}</p>\r\n      </div>\r\n\r\n      <FontAwesomeIcon\r\n        onClick={deleteHandler}\r\n        color=\"white\"\r\n        icon={faTrashAlt}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import Todo from \"../components/Todo\";\r\n\r\nconst AllTask = ({ toDos, setToDos, filterTodos }) => {\r\n  return (\r\n    <div className=\"allTask\">\r\n      <h2>ALL TASKS</h2>\r\n      <div className=\"taskContainer\">\r\n        <div className=\"task\">\r\n          {filterTodos.map((e) => {\r\n            console.log(filterTodos);\r\n            return (\r\n              <Todo\r\n                id={e.id}\r\n                key={e.id}\r\n                toDos={toDos}\r\n                setToDos={setToDos}\r\n                time={e.time}\r\n                text={e.text}\r\n                e={e}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllTask;\r\n","const NewTask = ({ setTextInput, toDos, setToDos, textInput }) => {\r\n  const inputTextHandler = (e) => {\r\n    if (e.target.value !== \"\") {\r\n      setTextInput(e.target.value);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (d) => {\r\n    if (textInput) {\r\n      setToDos([\r\n        ...toDos,\r\n        {\r\n          text: textInput,\r\n\r\n          id: Math.random() * 1000,\r\n          completed: false,\r\n          time: String(new Date()),\r\n        },\r\n      ]);\r\n\r\n      setTextInput(\"\");\r\n    } else {\r\n      alert(\"Please Add Note\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"newTask\">\r\n      <h1>Create New Task</h1>\r\n      <hr />\r\n      <div className=\"inputContainer\">\r\n        <input\r\n          onChange={inputTextHandler}\r\n          placeholder=\"Enter note here...\"\r\n          type=\"text\"\r\n          value={textInput}\r\n        />\r\n        <button onClick={submitHandler} type=\"submit\">\r\n          Add New Task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTask;\r\n","import Todo from \"../components/Todo\";\r\n\r\nconst CompletedTask = ({ toDos, setToDos, filterTodos }) => {\r\n  return (\r\n    <div className=\"allTask\">\r\n      <h2>Completed</h2>\r\n      <div className=\"taskContainer\">\r\n        <div className=\"task\">\r\n          {filterTodos.map((e) => {\r\n            console.log(filterTodos);\r\n            return (\r\n              <Todo\r\n                id={e.id}\r\n                key={e.id}\r\n                toDos={toDos}\r\n                setToDos={setToDos}\r\n                time={e.time}\r\n                text={e.text}\r\n                e={e}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompletedTask;\r\n","import Todo from \"../components/Todo\";\r\n\r\nconst PendingTask = ({ toDos, setToDos, filterTodos }) => {\r\n  return (\r\n    <div className=\"allTask\">\r\n      <h2>Pending</h2>\r\n      <div className=\"taskContainer\">\r\n        <div className=\"task\">\r\n          {filterTodos.map((e) => {\r\n            console.log(filterTodos);\r\n            return (\r\n              <Todo\r\n                id={e.id}\r\n                key={e.id}\r\n                toDos={toDos}\r\n                setToDos={setToDos}\r\n                time={e.time}\r\n                text={e.text}\r\n                e={e}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PendingTask;\r\n","import { useState, useEffect } from \"react\";\n\n// import components\nimport FilterTask from \"./components/FilterTask\";\nimport AllTask from \"./Pages/AllTask\";\nimport NewTask from \"./components/NewTask\";\nimport CompletedTask from \"./Pages/Completed\";\nimport PendingTask from \"./Pages/Pending\";\n\n// Routing\nimport { Route, Switch } from \"react-router\";\n\nfunction App() {\n  const [textInput, setTextInput] = useState(\"\");\n  const [toDos, setToDos] = useState([]);\n  const [status, setStatus] = useState(\"All tasks\");\n  const [filterTodos, setFilterTodos] = useState([]);\n\n  console.log(status);\n\n  // only for ones\n\n  useEffect(() => {\n    getToLocal();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveToLocal();\n  }, [toDos, status]);\n  // functions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilterTodos(\n          toDos.filter((e) => {\n            return e.completed === true;\n          })\n        );\n\n        console.log(filterTodos, \"ff\");\n\n        break;\n      case \"pending\":\n        setFilterTodos(\n          toDos.filter((e) => {\n            return e.completed === false;\n          })\n        );\n        break;\n      default:\n        setFilterTodos(toDos);\n        break;\n    }\n  };\n\n  // save to local\n\n  const saveToLocal = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(toDos));\n  };\n\n  const getToLocal = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let localTodo = JSON.parse(\n        localStorage.getItem(\"todos\", JSON.stringify(toDos))\n      );\n      setToDos(localTodo);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <h1>Task Management App</h1>\n      </nav>\n      <main>\n        <FilterTask setStatus={setStatus} status={status} />\n        <Switch>\n          <Route path=\"/to-do-list\" exact>\n            <AllTask\n              onClick={filterHandler}\n              filterTodos={filterTodos}\n              setToDos={setToDos}\n              toDos={toDos}\n            />\n          </Route>\n\n          <Route path=\"/to-do-list/completed\">\n            <CompletedTask\n              filterTodos={filterTodos}\n              setToDos={setToDos}\n              toDos={toDos}\n            />\n          </Route>\n          <Route path=\"/to-do-list/pending\">\n            <PendingTask\n              filterTodos={filterTodos}\n              setToDos={setToDos}\n              toDos={toDos}\n            />\n          </Route>\n        </Switch>\n        <NewTask\n          setTextInput={setTextInput}\n          textInput={textInput}\n          setToDos={setToDos}\n          toDos={toDos}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}